{
  "apiVersion": "apps/v1",
  "kind": "Deployment",
  "metadata": {
    "name": "ucd-ibm-nginx-dev-nginx",
    "namespace": "default",
    "resourceVersion": "562238",
    "labels": {
      "app": "ibm-nginx-dev",
      "chart": "ibm-nginx-dev-1.0.1",
      "component": "nginx",
      "heritage": "Tiller",
      "release": "ucd"
    },
    "annotations": {
      "deployment.kubernetes.io/revision": "1"
    }
  },
  "spec": {
    "replicas": 1,
    "selector": {
      "matchLabels": {
        "release": "ucd"
      }
    },
    "template": {
      "metadata": {
        "labels": {
          "app": "ibm-nginx-dev",
          "chart": "ibm-nginx-dev-1.0.1",
          "component": "nginx",
          "heritage": "Tiller",
          "release": "ucd"
        },
        "annotations": {
          "productID": "fbf6a96d49214c0abc6a3bc5da6e48cd",
          "productName": "Reference Product",
          "productVersion": "1.0.0.0"
        }
      },
      "spec": {
        "volumes": [
          {
            "name": "html",
            "emptyDir": {}
          }
        ],
        "containers": [
          {
            "name": "ibm-nginx-dev",
            "image": "nginx:1.13.9-alpine",
            "ports": [
              {
                "name": "http",
                "containerPort": 80,
                "protocol": "TCP"
              }
            ],
            "resources": {
              "limits": {
                "cpu": "100m",
                "memory": "256Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "256Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "html",
                "mountPath": "/usr/share/nginx/html"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "securityContext": {},
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchExpressions": [
                    {
                      "key": "beta.kubernetes.io/arch",
                      "operator": "In",
                      "values": [
                        "amd64",
                        "ppc64le",
                        "s390x"
                      ]
                    }
                  ]
                }
              ]
            },
            "preferredDuringSchedulingIgnoredDuringExecution": [
              {
                "weight": 2,
                "preference": {
                  "matchExpressions": [
                    {
                      "key": "beta.kubernetes.io/arch",
                      "operator": "In",
                      "values": [
                        "amd64"
                      ]
                    }
                  ]
                }
              },
              {
                "weight": 2,
                "preference": {
                  "matchExpressions": [
                    {
                      "key": "beta.kubernetes.io/arch",
                      "operator": "In",
                      "values": [
                        "ppc64le"
                      ]
                    }
                  ]
                }
              },
              {
                "weight": 2,
                "preference": {
                  "matchExpressions": [
                    {
                      "key": "beta.kubernetes.io/arch",
                      "operator": "In",
                      "values": [
                        "s390x"
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        "schedulerName": "default-scheduler"
      }
    },
    "strategy": {
      "type": "RollingUpdate",
      "rollingUpdate": {
        "maxUnavailable": 1,
        "maxSurge": 1
      }
    },
    "revisionHistoryLimit": 10,
    "progressDeadlineSeconds": 600
  }
}
